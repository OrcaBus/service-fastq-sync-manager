{
  "Comment": "A description of my state machine",
  "StartAt": "Save vars",
  "States": {
    "Save vars": {
      "Type": "Pass",
      "Next": "Get fastq id list from fastq set id list",
      "Assign": {
        "taskToken": "{% $states.input.taskToken %}",
        "payload": "{% $states.input.payload %}",
        "fastqSetIdList": "{% $states.input.payload.fastqSetIdList %}"
      }
    },
    "Get fastq id list from fastq set id list": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Arguments": {
        "FunctionName": "${__get_fastq_id_list_from_fastq_set_id_list_lambda_function_arn__}",
        "Payload": {
          "fastqSetIdList": "{% $fastqSetIdList %}"
        }
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 3,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Next": "Initiate task token for fastq id list",
      "Output": {
        "fastqIdList": "{% $states.result.Payload.fastqIdList %}"
      }
    },
    "Initiate task token for fastq id list": {
      "Type": "Task",
      "Resource": "arn:aws:states:::states:startExecution.waitForTaskToken",
      "Arguments": {
        "StateMachineArn": "${__initialise_task_token_for_fastq_id_list_sfn_arn__}",
        "Input": {
          "taskToken": "{% $states.context.Task.Token %}",
          "payload": {
            "fastqIdList": "{% $states.input.fastqIdList %}",
            "requirements": "{% $payload.requirements %}",
            "forceUnarchiving": "{% $payload.forceUnarchiving %}"
          }
        }
      },
      "Next": "SendTaskSuccess",
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "SendTaskFailure"
        }
      ]
    },
    "SendTaskFailure": {
      "Type": "Task",
      "Arguments": {
        "TaskToken": "{% $taskToken %}"
      },
      "Resource": "arn:aws:states:::aws-sdk:sfn:sendTaskFailure",
      "End": true
    },
    "SendTaskSuccess": {
      "Type": "Task",
      "Arguments": {
        "Output": {},
        "TaskToken": "{% $taskToken %}"
      },
      "Resource": "arn:aws:states:::aws-sdk:sfn:sendTaskSuccess",
      "End": true
    }
  },
  "QueryLanguage": "JSONata"
}
